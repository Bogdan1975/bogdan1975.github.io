/**
 * Created by Targus on 28.04.2016.
 * @author Bogdan Shapoval (targus) <it.targus@gmail.com>
 */
System.register(['@angular/core', 'ng2-styled-directive/ng2-styled.directive'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, ng2_styled_directive_1;
    var Ng2ShowCodeComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (ng2_styled_directive_1_1) {
                ng2_styled_directive_1 = ng2_styled_directive_1_1;
            }],
        execute: function() {
            Ng2ShowCodeComponent = (function () {
                function Ng2ShowCodeComponent(_elementRef) {
                    this._elementRef = _elementRef;
                    this.language = 'html';
                    this.skin = 'github';
                    this.skinDirectory = 'node_modules/highlightjs/styles';
                    // private _skinDirectory:string = 'node_modules/highlightjs/styles';
                    this._skinNames = ['agate', 'androidstudio', 'arta', 'ascetic', 'atelier-cave.dark', 'atelier-cave.light', 'atelier-dune.dark', 'atelier-dune.light', 'atelier-estuary.dark', 'atelier-estuary.light', 'atelier-forest.dark', 'atelier-forest.light', 'atelier-heath.dark', 'atelier-heath.light', 'atelier-lakeside.dark', 'atelier-lakeside.light', 'atelier-plateau.dark', 'atelier-plateau.light', 'atelier-savanna.dark', 'atelier-savanna.light', 'atelier-seaside.dark', 'atelier-seaside.light', 'atelier-sulphurpool.dark', 'atelier-sulphurpool.light', 'brown_paper', 'codepen-embed', 'color-brewer', 'dark', 'darkula', 'default', 'docco', 'far', 'foundation', 'github-gist', 'github', 'googlecode', 'grayscale', 'hopscotch', 'hybrid', 'idea', 'ir_black', 'kimbie.dark', 'kimbie.light', 'magula', 'mono-blue', 'monokai', 'monokai_sublime', 'obsidian', 'paraiso.dark', 'paraiso.light', 'pojoaque', 'railscasts', 'rainbow', 'school_book', 'solarized_dark', 'solarized_light', 'sunburst', 'tomorrow-night-blue', 'tomorrow-night-bright', 'tomorrow-night-eighties', 'tomorrow-night', 'tomorrow', 'vs', 'xcode', 'zenburn'];
                    this.hljs = typeof (hljs) == 'object' ? hljs : null;
                }
                Ng2ShowCodeComponent.prototype.ngAfterContentInit = function () {
                    if (this._skinNames.includes(this.skin)) {
                        this.stylePath = this.skinDirectory + "/" + this.skin + ".css";
                    }
                    // in case of some code was marked as CDATA
                    // var tmplt = this._elementRef.nativeElement.children[0].innerHTML.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');
                    var tmplt = this.decodeEntities(this._elementRef.nativeElement.children[0].innerHTML);
                    if (this.hljs != null && typeof (this.hljs) == 'object' && typeof (this.hljs.highlight) == 'function') {
                        tmplt = this.hljs.highlight(this.language, tmplt, true).value;
                    }
                    else {
                        tmplt = this.reformatCode(tmplt);
                    }
                    this._elementRef.nativeElement.innerHTML = "<pre><code class=\"html\">" + tmplt + "</code></pre>";
                };
                Ng2ShowCodeComponent.prototype.decodeEntities = function (encodedString) {
                    var textArea = document.createElement('textarea');
                    textArea.innerHTML = encodedString;
                    return textArea.value;
                };
                Ng2ShowCodeComponent.prototype.reformatCode = function (code) {
                    return this.reformatHtml(code);
                };
                Ng2ShowCodeComponent.prototype.reformatHtml = function (code) {
                    return code.replace(/</g, '&lt;').replace(/>/g, '&gt;');
                };
                Ng2ShowCodeComponent.prototype.getIdentityAttribute = function () {
                    for (var _i = 0, _a = this._elementRef.nativeElement.attributes; _i < _a.length; _i++) {
                        var attr = _a[_i];
                        if (/^_nghost/.test(attr.name) || /^_ngcontent/.test(attr.name)) {
                            return attr.name;
                        }
                    }
                    return false;
                };
                Ng2ShowCodeComponent.prototype.setStyleForElement = function (style) {
                    var idAttr = this.getIdentityAttribute();
                    var styleEl = document.createElement('style');
                    styleEl.type = 'text/css';
                    var styleString = "[" + idAttr + "] " + style;
                    styleEl.innerHTML = styleString;
                    var head = document.getElementsByTagName('head')[0];
                    head.appendChild(styleEl);
                };
                // create configuration for using skins by "styled" directive
                // Implementation of ISkinable interface
                Ng2ShowCodeComponent.prototype.getStyledConfig = function () {
                    var _this = this;
                    var config = {};
                    this._skinNames.forEach(function (value) {
                        config[value] = {
                            'path': _this.skinDirectory + "/" + value + ".css"
                        };
                    });
                    return config;
                };
                __decorate([
                    core_1.Input(), 
                    __metadata('design:type', Object)
                ], Ng2ShowCodeComponent.prototype, "language", void 0);
                __decorate([
                    core_1.Input(), 
                    __metadata('design:type', String)
                ], Ng2ShowCodeComponent.prototype, "skin", void 0);
                __decorate([
                    core_1.Input(), 
                    __metadata('design:type', String)
                ], Ng2ShowCodeComponent.prototype, "skinDirectory", void 0);
                __decorate([
                    core_1.ContentChildren(ng2_styled_directive_1.Ng2StyledDirective), 
                    __metadata('design:type', (typeof (_a = typeof core_1.QueryList !== 'undefined' && core_1.QueryList) === 'function' && _a) || Object)
                ], Ng2ShowCodeComponent.prototype, "_children", void 0);
                Ng2ShowCodeComponent = __decorate([
                    core_1.Component({
                        selector: 'show-code',
                        template: '<div styled stylePath="{{stylePath}}"><ng-content></ng-content></div>',
                        directives: [ng2_styled_directive_1.Ng2StyledDirective],
                    }), 
                    __metadata('design:paramtypes', [(typeof (_b = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _b) || Object])
                ], Ng2ShowCodeComponent);
                return Ng2ShowCodeComponent;
                var _a, _b;
            }());
            exports_1("Ng2ShowCodeComponent", Ng2ShowCodeComponent);
        }
    }
});
//# sourceMappingURL=ng2-show-code.component.js.map